generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  password      String
  role          UserRole      @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  activities    Activity[]
  createdGroups Group[]        @relation("GroupCreator")
  memberships   GroupMember[]
  personalData  PersonalData[]
}

model Group {
  id          String        @id @default(cuid())
  name        String
  description String?
  creatorId   String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  activities  Activity[]
  createdBy   User          @relation("GroupCreator", fields: [creatorId], references: [id])
  members     GroupMember[]
}

enum GroupRole {
  ADMIN
  MEMBER
}

model GroupMember {
  id       String    @id @default(cuid())
  groupId  String
  userId   String
  role     GroupRole @default(MEMBER)
  joinedAt DateTime  @default(now())
  group    Group     @relation(fields: [groupId], references: [id])
  user     User      @relation(fields: [userId], references: [id])

  @@unique([groupId, userId])
}

model Activity {
  id           String       @id @default(cuid())
  userId       String
  groupId      String?
  activityType ActivityType
  duration     Int
  date         DateTime
  createdAt    DateTime     @default(now())
  group        Group?       @relation(fields: [groupId], references: [id])
  user         User         @relation(fields: [userId], references: [id])
}

model PersonalData {
  id        String   @id @default(cuid())
  userId    String
  photoUrl  String?
  logDate   DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

enum ActivityType {
  CAMINATA
  CORRER
  BICICLETA_FIJA
  GYM
  TAP_OUT
  PILATES
  MALOVA
}
